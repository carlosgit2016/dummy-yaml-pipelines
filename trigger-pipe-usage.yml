# trigger-pipe-usage.yml

pool:
    vmImage: 'ubuntu-latest'

steps:
- task: TriggerBuild@3
  inputs:
    definitionIsInCurrentTeamProject: true
    buildDefinition: '25'
    queueBuildForUserThatTriggeredBuild: true
    ignoreSslCertificateErrors: true
    useSameSourceVersion: false
    useCustomSourceVersion: false
    useSameBranch: true
    waitForQueuedBuildsToFinish: true
    waitForQueuedBuildsToFinishRefreshTime: '10'
    failTaskIfBuildsNotSuccessful: true
    cancelBuildsIfAnyFails: false
    treatPartiallySucceededBuildAsSuccessful: false
    downloadBuildArtifacts: false
    storeInEnvironmentVariable: true
    authenticationMethod: 'OAuth Token'
    password: $(System.AccessToken)
    enableBuildInQueueCondition: false
    dependentOnSuccessfulBuildCondition: false
    dependentOnFailedBuildCondition: false
    checkbuildsoncurrentbranch: false
    failTaskIfConditionsAreNotFulfilled: false

# $TRIGGEREDBUILDIDS variable environment (work on windows and linux)
# $(TRIGGEREDBUILDIDS) Azure DevOps variable macro UPPERCASE | runtime (work on windows and linux)
# $(TriggeredBuildIds) Azure DevOps variable macro | runtime (work on windows and linux)
- bash: |
    echo $TriggeredBuildIds
    echo number triggered build:  $TRIGGEREDBUILDIDS 
    echo number tr $(TRIGGEREDBUILDIDS)
    echo number tr $(TriggeredBuildIds)

# $($env:TriggeredBuildIds) environment system variable (work on windows)
# $(TriggeredBuildIds) Azure DevOps variable macro | runtime (work on windows and linux)
- powershell: |
    Write-Output "Fetching variable TriggeredBuildIds:"
    Write-Output "$($env:TriggeredBuildIds)"
    Write-Output "$(TriggeredBuildIds)"